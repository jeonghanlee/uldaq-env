#
#
INSTALL:= install
INSTALL_PROGRAM:=$(INSTALL)
INSTALL_DATA:=$(INSTALL) -m 644
INSTALL_755:=$(INSTALL) -m 755

# IF INSTALL_LOCATIOIN/.. is not WRITABLE, SUDO and SUDOBASH should be used 
# SUDO_INFO 1 : SUDO is needed (NOT writable)
# SUDO_INFO 0 : SUDO is not needed
# There is no simple way to detect whether SUDO is needed to create INSTALL_LOCATION"
# test -w $(INSTALL_LOCATION) is wrong, if the directory doesn't exsit.
# So, test -w $(INSTALL_LOCATION)/.. is a bit better solution.
# There is only one exception when INSTALL_LOCATION = HOME.
ifeq "$(INSTALL_LOCATION)" "${HOME}"
SUDO_INFO := $(shell test -w $(INSTALL_LOCATION) 1>&2 2> /dev/null; echo $$?)
else
SUDO_INFO := $(shell test -w $(INSTALL_LOCATION)/.. 1>&2 2> /dev/null; echo $$?)
endif

SUDO_CMD := $(shell which sudo)

# For CentOS, devtoolset-{7,8} has -E option within sudo shell
# So we have to remove -E option as well if we would like to use devtoolset
#
ifeq "$(SUDO_INFO)" "1"
SUDO = $(SUDO_CMD)
else
ifeq ($(UNAME_S),Darwin)
SUDO = $(SUDO_CMD)
else
SUDO :=
endif
endif


ifeq ($(UNAME_S),Darwin)
OS_VERSION:=$(strip $(shell sw_vers -productVersion))
OS_NAME:=$(strip $(shell sw_vers -productName))
endif
ifeq ($(UNAME_S),Linux)
OS_VERSION:=$(strip $(shell grep -Po '^VERSION_ID=\K[^d].+' /etc/os-release | sed 's/\"//g'))
OS_NAME:=$(strip $(shell grep -Po '^ID=\K[^S].+' /etc/os-release | sed 's/\"//g'))
endif


#
SITE_TEMPLATE_PATH:=$(TOP)/site-template
#
#
PATH:=$(MAVEN_PATH):$(ANT_PATH):$(JAVA_PATH):${PATH}
#
ANT_CMD:=$(ANT_PATH)/ant
MAVEN_CMD:=$(MAVE_PATH)/mvn
JAVA_CMD:=$(JAVA_PATH)/java 
#
VARS_EXCLUDES+=SRC_PATH_INFO
VARS_EXCLUDES+=INSTALL
VARS_EXCLUDES+=INSTALL_PROGRAM
VARS_EXCLUDES+=INSTALL_DATA
VARS_EXCLUDES+=SUDOBASH
VARS_EXCLUDES+=INSTALL_755





